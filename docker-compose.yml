version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - ./logs:/app/logs
    environment:
      - API_V1_PREFIX=/api/v1
      - PYTHONUNBUFFERED=1
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile
      args:
        - npm install
        - npm run build
    ports:
      - "80:80"
    depends_on:
      - backend
      - rust-backend
    volumes:
      - ./web-frontend/src:/usr/share/nginx/html
      - ./web-frontend/dist:/usr/share/nginx/html/dist
      - ./web-frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  rust-backend:
    build:
      context: ./rust-backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - RUST_LOG=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/weather/current?lat=1.3521&lon=103.8198"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge